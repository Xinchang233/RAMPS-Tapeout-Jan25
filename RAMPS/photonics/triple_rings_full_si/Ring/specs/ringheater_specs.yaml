
# Directory Locations
project_name: ringheater

# Output Settings
lsf_filename: ringheater.lsf
gds_filename: RingHeater_gds

# Specify a generic technology as this is a public sample
bag_config_path: 'BPG/examples/tech/bag_config.yaml'

# Generator Params
# Module that contains the layout generator class
layout_package: 'Photonic_Core_Layout.Ring.ringheater'
# Layout generator class name
layout_class: 'RingHeater'

layout_params:
  rout: 3
  width: 0.5
  contact_dist: 1
  contact_width: 0.8
  device_layer: !!python/tuple ['SI', 'drawing']
  disk_layers:
    - !!python/tuple ['NN', 'drawing']
  electrode_top_layer: !!python/tuple ['M4', 'drawing']
  electrode_top_x_span: 1.5
  electrode_top_y_span: 2
  electrode_bottom_x_span: 1
  electrode_bottom_y_span: 1
  disk_layer_extension: 0.15
  electrode_bottom_layer: !!python/tuple ['SI', 'drawing']
#  electrode_label: 'Heater'
  electrode_label: {P: 'Heater_P_LABEL', N: 'N_heater_custom'}


# Cadence related parameters
impl_lib: 'ringheater_lib'
impl_cell: 'ringheater_cell'
